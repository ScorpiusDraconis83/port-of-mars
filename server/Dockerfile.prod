FROM node:lts-bookworm AS pom-client-builder-base

WORKDIR /code/client

COPY ./client/package.json ./client/package-lock.json /code/client/
RUN npm install

COPY ./shared/package.json ./shared/package-lock.json /code/shared/
RUN cd /code/shared && npm install

COPY ./client /code/client
COPY ./shared /code/shared

COPY ./.env /code/client/

ARG NODE_ARG=production
ENV NODE_ENV=${NODE_ARG}

RUN npm run build


FROM node:lts-bookworm AS pom-server-base

WORKDIR /code/server

COPY ./server/package.json ./server/package-lock.json /code/server/
RUN npm install

COPY ./shared/package.json ./shared/package-lock.json /code/shared/
RUN cd /code/shared && npm install

COPY ./server /code/server
COPY ./shared /code/shared

RUN npm run build \
  && cp tsconfig.json package.json lib/server/


FROM node:lts-bookworm

LABEL maintainer="Allen Lee <allen.lee@asu.edu>"

RUN apt-get update \
  && apt install -y gnupg2 lsb-release postgresql-client python3-dev python3-pip pgcli \
  && apt-get upgrade -y -o Dpkg::Options::="--force-confold" \
  && apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

COPY ./server/fixtures /code/server/fixtures
COPY --from=pom-server-base /code/server/lib /code
COPY --from=pom-server-base /code/server/node_modules /code/server/node_modules
COPY --from=pom-client-builder-base /code/client/dist /code/server/static

WORKDIR /code/server

ARG NODE_ARG=production
ENV NODE_ENV=${NODE_ARG}

CMD ["npm", "run", "start:prod"] 
